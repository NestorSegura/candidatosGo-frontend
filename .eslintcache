[{"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/index.tsx":"1","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/reportWebVitals.ts":"2","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/login.tsx":"3","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/auth.service.ts":"4","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/Dashboard.tsx":"5","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidatosSearchForm.tsx":"6","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Auth/AuthContext.tsx":"7","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/MainNav.tsx":"8","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/candidates.service.ts":"9","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Login.tsx":"10","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/fetch.ts":"11","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/CandidatePage.tsx":"12","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidateFile.tsx":"13","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidateList.tsx":"14","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/utils/comparisonMethods.ts":"15","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidateEditForm.tsx":"16","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/ProcessInformation/ProcessInformationCreateEditForm.tsx":"17","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/processInformation.service.ts":"18","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/utils/checkMethods.ts":"19","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/SideNav/SideNav.tsx":"20","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/PageWrapper/PageWrapper.tsx":"21","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/Usuarios.tsx":"22","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/ConfigurationPage.tsx":"23","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/auth/AuthContext.tsx":"24","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidateFile.tsx":"25","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/pagewrapper/PageWrapper.tsx":"26","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidatosSearchForm.tsx":"27","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidateList.tsx":"28","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/sidenav/SideNav.tsx":"29","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidateEditForm.tsx":"30","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/processinformation/ProcessInformationCreateEditForm.tsx":"31","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/users/CreateUsersForm.tsx":"32"},{"size":1417,"mtime":1611442781849,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1610811910024,"results":"35","hashOfConfig":"34"},{"size":2323,"mtime":1611089319279,"results":"36","hashOfConfig":"34"},{"size":2025,"mtime":1612104761596,"results":"37","hashOfConfig":"34"},{"size":702,"mtime":1611442601088,"results":"38","hashOfConfig":"34"},{"size":8067,"mtime":1611442367358,"results":"39","hashOfConfig":"34"},{"size":2234,"mtime":1611257478239,"results":"40","hashOfConfig":"34"},{"size":1957,"mtime":1612104012820,"results":"41","hashOfConfig":"34"},{"size":1118,"mtime":1611266418570,"results":"42","hashOfConfig":"34"},{"size":2814,"mtime":1612104376825,"results":"43","hashOfConfig":"34"},{"size":1653,"mtime":1611182260372,"results":"44","hashOfConfig":"34"},{"size":329,"mtime":1611442601111,"results":"45","hashOfConfig":"34"},{"size":3255,"mtime":1611442672707,"results":"46","hashOfConfig":"34"},{"size":2426,"mtime":1611266454540,"results":"47","hashOfConfig":"34"},{"size":760,"mtime":1611443494449,"results":"48","hashOfConfig":"34"},{"size":4634,"mtime":1611273439200,"results":"49","hashOfConfig":"34"},{"size":13047,"mtime":1611426375291,"results":"50","hashOfConfig":"34"},{"size":968,"mtime":1611443429626,"results":"51","hashOfConfig":"34"},{"size":168,"mtime":1611425547652,"results":"52","hashOfConfig":"34"},{"size":1022,"mtime":1611442183550,"results":"53","hashOfConfig":"34"},{"size":512,"mtime":1611442601107,"results":"54","hashOfConfig":"34"},{"size":331,"mtime":1611446911258,"results":"55","hashOfConfig":"34"},{"size":274,"mtime":1611442601092,"results":"56","hashOfConfig":"34"},{"size":3056,"mtime":1612104166915,"results":"57","hashOfConfig":"34"},{"size":3255,"mtime":1611442672707,"results":"58","hashOfConfig":"34"},{"size":512,"mtime":1611442601107,"results":"59","hashOfConfig":"34"},{"size":8057,"mtime":1611445518906,"results":"60","hashOfConfig":"34"},{"size":2416,"mtime":1611442917543,"results":"61","hashOfConfig":"34"},{"size":3554,"mtime":1612089237567,"results":"62","hashOfConfig":"34"},{"size":4424,"mtime":1611443368296,"results":"63","hashOfConfig":"34"},{"size":13253,"mtime":1611446233010,"results":"64","hashOfConfig":"34"},{"size":4527,"mtime":1612105395189,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d2u1iy",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/index.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/reportWebVitals.ts",[],["136","137"],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/login.tsx",["138"],"import * as React from 'react';\nimport {useContext, useState} from 'react';\nimport AuthService, {ErrorMessageResponse, LoginResponse} from \"../services/auth.service\";\nimport {AuthContext} from \"./Auth/AuthContext\";\nimport moment from 'moment';\n\nconst Login: React.FC = () => {\n    const [username, setUsername] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const {login} = useContext(AuthContext);\n\n    const handleLogin = async (e: React.MouseEvent) => {\n        AuthService.login(username, password)\n            .then(response => {\n                if (response.success) {\n                    response = response as LoginResponse;\n                    login(response.expires, response.token);\n                    setError('')\n                } else {\n                    response = response as ErrorMessageResponse\n                    setError(response.msg)\n                }\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row justify-content-center align-items-center\">\n                <form className=\"col-10 col-sm-4\">\n                    <h1>Entrar al sistema</h1>\n                    <div className=\"mb-3\">\n                        <input className=\"form-control\" placeholder=\"nombre de usuario\" value={username}\n                               onChange={(e) => setUsername(e.target.value)}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <input type=\"password\" className=\"form-control\" placeholder=\"contraseña\" value={password}\n                               onChange={(e) => setPassword(e.target.value)}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={handleLogin}>entrar</button>\n                    </div>\n                    {\n                        !!error ? (\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {error}\n                            </div>\n                        ) : null\n                    }\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;",["139","140"],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/auth.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/Dashboard.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidatosSearchForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Auth/AuthContext.tsx",[],["141","142"],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/MainNav.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/candidates.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Login.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/fetch.ts",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/CandidatePage.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidateFile.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidateList.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/utils/comparisonMethods.ts",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/Candidatos/CandidateEditForm.tsx",["143"],"import * as React from \"react\";\nimport {useState} from \"react\";\nimport CandidatesService from \"../../services/candidates.service\";\nimport {UICandidate} from \"../../services/models/UICandidate\";\n\ninterface CandidateEditFormProps {\n    candidate: UICandidate | undefined;\n    editHandler: Function;\n}\n\nconst CandidateEditForm: React.FC<CandidateEditFormProps> = (props: CandidateEditFormProps) => {\n\n    const {email, phone1, phone2, id, dni, surename, lastname, office_id} = props.candidate || {};\n\n    const [emailField, setEmailField] = useState<string>(email || \"\");\n    const [phone1Field, setPhone1Field] = useState<string>(phone1 || \"\");\n    const [phone2Field, setPhone2Field] = useState<string>(phone2 || \"\");\n    const [surenameField, setSurenameField] = useState<string>(surename || \"\");\n    const [lastnameField, setLastnameField] = useState<string>(lastname || \"\");\n    const [dniField, setDniField] = useState<string>(dni || \"\");\n\n    const resetAllFields = () => {\n        setEmailField(\"\");\n        setPhone1Field(\"\");\n        setPhone2Field(\"\");\n        setSurenameField(\"\");\n        setLastnameField(\"\");\n        setDniField(\"\");\n    }\n\n    const onEditCandidateClickHandler = async () => {\n        const newCandidate: UICandidate = {\n            email: emailField,\n            phone1: phone1Field,\n            phone2: phone2Field,\n            dni: dniField,\n            surename: surenameField,\n            lastname: lastnameField,\n            id: id,\n            office_id: office_id || \"\"\n        }\n        await CandidatesService.updateCandidate(newCandidate)\n            .then(res => {\n                console.log('candidate updated response',res);\n                props.editHandler(false);\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <form className=\"row mb-3 align-items-end\">\n            <div className=\"col-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"mail\" className=\"form-label\">Nombre(s)</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       id=\"surename\"\n                       value={surenameField}\n                       placeholder=\"Carlos\" onChange={e => setSurenameField(e.target.value)}/>\n            </div>\n            <div className=\"col-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"lastname\" className=\"form-label\">Apellido(s)</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       id=\"lastname\"\n                       value={lastnameField}\n                       placeholder=\"López\" onChange={e => setLastnameField(e.target.value)}/>\n            </div>\n            <div className=\"col-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"dni\" className=\"form-label\">DNI</label>\n                <input type=\"text\"\n                       className=\"form-control\"\n                       id=\"dni\"\n                       value={dniField}\n                       placeholder=\"9999999R\" onChange={e => setDniField(e.target.value)}/>\n            </div>\n            <div className=\"col-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"telefono1\" className=\"form-label\">Telefono 1</label>\n                <input type=\"number\"\n                       className=\"form-control\"\n                       id=\"telefono1\"\n                       value={phone1Field}\n                       placeholder=\"34665112233\" onChange={e => setPhone1Field(e.target.value)}/>\n            </div>\n            <div className=\"col-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"telefono2\" className=\"form-label\">Telefono 2</label>\n                <input type=\"number\"\n                       className=\"form-control\"\n                       id=\"telefono2\"\n                       value={phone2Field}\n                       placeholder=\"34665112233\" onChange={e => setPhone2Field(e.target.value)}/>\n            </div>\n            <div className=\"col-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"mail\" className=\"form-label\">Correo Electrónico</label>\n                <input type=\"email\"\n                       className=\"form-control\"\n                       id=\"mail\"\n                       value={emailField}\n                       placeholder=\"candidato@example.com\" onChange={e => setEmailField(e.target.value)}/>\n            </div>\n            <div className=\"col-12 mt-3\">\n                <button type=\"button\" className=\"btn btn-primary me-3\" onClick={onEditCandidateClickHandler}>\n                    Guardar cambios\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default CandidateEditForm;","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/ProcessInformation/ProcessInformationCreateEditForm.tsx",["144"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport ProcessInformationService from \"../../services/processInformation.service\";\nimport {UIProcessInformation} from \"../../services/models/UIProcessInformation\";\nimport {deepEqual} from \"../../utils/comparisonMethods\";\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {checkNullString} from \"../../utils/checkMethods\";\n\ninterface ProcessInformationCreateEditFormProps {\n    candidateId: number;\n}\n\nconst ProcessInformationCreateEditForm: React.FC<ProcessInformationCreateEditFormProps> = (props: ProcessInformationCreateEditFormProps) => {\n\n    const [processInformation, setProcessInformation] = useState<UIProcessInformation>();\n    const [interviewDate, setInteviewDate] = useState<Date>();\n    const [preselected, setPreselected] = useState<boolean>(false);\n    const [preselectedComments, setPreselectedComments] = useState<string>();\n    const [assitedToObservation, setAssistedToObservation] = useState<boolean>(false);\n    const [observationDay, setObservationDay] = useState<Date>();\n    const [observationDayComments, setObservationDayComments] = useState<string>();\n    const [trainer, setTrainer] = useState<string>();\n    const [admited, setAdmited] = useState<boolean>(false);\n    const [admissionComments, setAdmissionComments] = useState<string>();\n    const [down, setDown] = useState<boolean>(false);\n    const [downDate, setDownDate] = useState<Date>();\n    const [downComments, setDownComments] = useState<string>();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await ProcessInformationService.findProcessInformationByCandidateId<UIProcessInformation>(props.candidateId);\n\n            if (response.parsedBody && !deepEqual(response.parsedBody.data, processInformation)) {\n                setProcessInformation(response.parsedBody.data)\n            }\n\n            if(!interviewDate && checkNullString(processInformation?.interviewDate) && processInformation?.interviewDate) {\n                setInteviewDate(moment.utc(processInformation?.interviewDate).toDate())\n            }\n\n            if(processInformation?.preSelected !== preselected) {\n                setPreselected(!!processInformation?.preSelected);\n            }\n\n            if(checkNullString(processInformation?.preselectedComments) && processInformation?.preselectedComments !== preselectedComments) {\n                setPreselectedComments(processInformation?.preselectedComments)\n            }\n\n            if(processInformation?.assistedToObservation !== assitedToObservation) {\n                setAssistedToObservation(!!processInformation?.assistedToObservation)\n            }\n\n            if(!observationDay && checkNullString(processInformation?.observationDate) && processInformation?.observationDate) {\n                setObservationDay(moment.utc(processInformation.observationDate).toDate())\n            }\n\n            if(checkNullString(processInformation?.observationComments) && processInformation?.observationComments !== observationDayComments) {\n                setObservationDayComments(processInformation?.observationComments)\n            }\n\n            if(checkNullString(processInformation?.trainer) && processInformation?.trainer !== trainer) {\n                setTrainer(processInformation?.trainer);\n            }\n\n            if(processInformation?.admited !== admited) {\n                setAdmited(!!processInformation?.admited);\n            }\n\n            if(checkNullString(processInformation?.admitionComments) && processInformation?.admitionComments !== admissionComments) {\n                setAdmissionComments(processInformation?.admitionComments);\n            }\n\n            if(processInformation?.down !== down) {\n                setDown(!!processInformation?.down);\n            }\n\n            if(checkNullString(processInformation?.downComments) && processInformation?.downComments !== downComments) {\n                setDownComments(processInformation?.downComments)\n            }\n\n            if(!downDate && checkNullString(processInformation?.downDay) && processInformation?.downDay) {\n                setDownDate(moment.utc(processInformation.downDay).toDate())\n            }\n\n        }\n        fetchData();\n    }, [processInformation])\n\n    async function saveChangesHandler() {\n        const newProcessInformation: UIProcessInformation = {\n            registryTime: processInformation?.registryTime || moment().toDate().toLocaleDateString(),\n            interviewDate: interviewDate?.toDateString(),\n            preSelected: preselected,\n            preselectedComments: preselectedComments,\n            assistedToObservation: assitedToObservation,\n            observationDate: observationDay?.toDateString(),\n            observationComments: observationDayComments,\n            trainer: trainer,\n            admited: admited,\n            admitionComments: admissionComments,\n            down: down,\n            downDay: downDate?.toDateString(),\n            downComments: downComments,\n            candidateId: props.candidateId\n        }\n        if (processInformation?.id) {\n            newProcessInformation.id = processInformation.id\n            await ProcessInformationService.updateProcessInformation(newProcessInformation)\n        } else {\n            const response = await ProcessInformationService.saveProcessInformation<UIProcessInformation>(newProcessInformation)\n            if(response.parsedBody?.data) {\n                setProcessInformation(response.parsedBody?.data)\n            }\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h3 className=\"mb-3\">Información del proceso</h3>\n            <form className=\"mb-4\">\n                <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n                    <label htmlFor=\"mail\" className=\"form-label me-3\">Fecha de entrevista: </label>\n                    <DatePicker selected={interviewDate}\n                                className=\"form-control\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                placeholderText=\"sin fecha aún\"\n                                onChange={date => setInteviewDate(date as Date)}/>\n                </div>\n\n                <hr className=\"mt-4 mb-4 col-12 col-sm-6 \"/>\n\n                <div className=\"col-12 col-sm-6  d-flex mb-3\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\"\n                               type=\"checkbox\"\n                               id=\"preselectedCheckbox\"\n                               checked={preselected}\n                               onChange={(e) => setPreselected(e.target.checked)}/>\n                        <label htmlFor=\"preselectedCheckbox\" className=\"form-check-label\">pre-seleccionado: </label>\n                    </div>\n                </div>\n                <div className=\"col-12 col-sm-6  mb-3\">\n                    <label htmlFor=\"preselectedComment\" className=\"form-label\">Comentario de\n                        preselección</label>\n                    <textarea className=\"form-control\"\n                              id=\"preselectedComment\"\n                              rows={3}\n                              value={preselectedComments}\n                              onChange={e => setPreselectedComments(e.target.value)}/>\n                </div>\n\n                <hr className=\"mt-4 mb-4 col-12 col-sm-6 \"/>\n\n                <div className=\"col-12 col-sm-6  mb-3\">\n                    <label htmlFor=\"mail\" className=\"form-label me-3\">Fecha de observación: </label>\n                    <DatePicker selected={observationDay}\n                                className=\"form-control\"\n                                dateFormat=\"dd/MM/yyyy\"\n                                placeholderText=\"sin fecha aún\"\n                                onChange={date => setObservationDay(moment.utc(date as Date).toDate())}/>\n                </div>\n                <div className=\"col-12 col-sm-6  d-flex mb-3\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\"\n                               type=\"checkbox\"\n                               checked={assitedToObservation}\n                               onChange={e => setAssistedToObservation(e.target.checked)}\n                               id=\"observationDayCheckbox\"/>\n                        <label htmlFor=\"observationDayCheckbox\" className=\"form-check-label\">Asistió al día de\n                            observación </label>\n                    </div>\n                </div>\n                <div className=\"col-12 col-sm-6  mb-3\">\n                    <label htmlFor=\"assistedToObservationComment\" className=\"form-label\">Comentario día de\n                        observación</label>\n                    <textarea className=\"form-control\"\n                              id=\"assistedToObservationComment\"\n                              rows={3}\n                              value={observationDayComments}\n                              onChange={e => setObservationDayComments(e.target.value)}/>\n                </div>\n                <hr className=\"mt-4 mb-4 col-12 col-sm-6 \"/>\n                <div className=\"col-12 col-sm-6  mb-3 d-flex align-items-center\">\n                    <label htmlFor=\"trainerText\" className=\"form-label me-3\">Entrenador: </label>\n                    <input type=\"text\"\n                           className=\"form-control\" id=\"trainerText\"\n                           value={trainer}\n                           onChange={e => setTrainer(e.target.value)}\n                           placeholder=\"nombre del entrenador\"/>\n                </div>\n                <div className=\"col-12 col-sm-6  d-flex mb-3\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\"\n                               type=\"checkbox\"\n                               checked={admited}\n                               onChange={e => setAdmited(e.target.checked)}\n                               id=\"observationDayCheckbox\"/>\n                        <label htmlFor=\"admisionCheckbox\" className=\"form-check-label\">Admitido</label>\n                    </div>\n                </div>\n                <div className=\"col-12 col-sm-6  mb-3\">\n                    <label htmlFor=\"admisioncomments\" className=\"form-label\">Comentarios de admisión</label>\n                    <textarea className=\"form-control\"\n                              id=\"admisioncomments\"\n                              rows={3}\n                              value={admissionComments}\n                              onChange={e => setAdmissionComments(e.target.value)}/>\n                </div>\n\n                <hr className=\"mt-4 mb-4 col-12 col-sm-6 col-md-4\"/>\n\n                <div className=\"col-12 col-sm-6  d-flex mb-3\">\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\"\n                               type=\"checkbox\"\n                               checked={down}\n                               onChange={e => setDown(e.target.checked)}\n                               id=\"downCheckbox\"/>\n                        <label htmlFor=\"downCheckbox\" className=\"form-check-label\">Dado de baja</label>\n                    </div>\n                </div>\n                {\n                    down ? (<>\n                            <div className=\"col-12 col-sm-6 col-md-4 mb-3\">\n                                <label htmlFor=\"mail\" className=\"form-label me-3\">Fecha de baja: </label>\n                                <DatePicker selected={downDate}\n                                            className=\"form-control\"\n                                            dateFormat=\"dd/MM/yyyy\"\n                                            placeholderText=\"no tiene fecha de baja\"\n                                            onChange={date => setDownDate(moment.utc(date as Date).toDate())}/>\n                            </div>\n                            <div className=\"col-12 col-sm-6  mb-3\">\n                                <label htmlFor=\"downcomments\" className=\"form-label\">Comentarios de baja</label>\n                                <textarea className=\"form-control\"\n                                          id=\"downcomments\"\n                                          rows={3}\n                                          value={downComments}\n                                          onChange={e => setDownComments(e.target.value)}/>\n                            </div>\n                        </>\n                    ) : null\n                }\n\n            </form>\n            <div className=\"col\">\n                <button type=\"button\" className=\"btn btn-outline-primary\"\n                        onClick={saveChangesHandler}>\n                    Guardar cambios\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProcessInformationCreateEditForm;","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/processInformation.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/utils/checkMethods.ts",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/SideNav/SideNav.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/PageWrapper/PageWrapper.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/Usuarios.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/pages/ConfigurationPage.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/auth/AuthContext.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidateFile.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/pagewrapper/PageWrapper.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidatosSearchForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidateList.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/sidenav/SideNav.tsx",["145","146","147"],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/candidatos/CandidateEditForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/processinformation/ProcessInformationCreateEditForm.tsx",["148"],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/components/users/CreateUsersForm.tsx",["149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":14},{"ruleId":"150","replacedBy":"158"},{"ruleId":"152","replacedBy":"159"},{"ruleId":"150","replacedBy":"160"},{"ruleId":"152","replacedBy":"161"},{"ruleId":"154","severity":1,"message":"162","line":22,"column":11,"nodeType":"156","messageId":"157","endLine":22,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":89,"column":8,"nodeType":"165","endLine":89,"endColumn":28,"suggestions":"166"},{"ruleId":"154","severity":1,"message":"167","line":14,"column":32,"nodeType":"156","messageId":"157","endLine":14,"endColumn":52},{"ruleId":"154","severity":1,"message":"168","line":15,"column":32,"nodeType":"156","messageId":"157","endLine":15,"endColumn":53},{"ruleId":"163","severity":1,"message":"169","line":52,"column":8,"nodeType":"165","endLine":52,"endColumn":64,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"164","line":91,"column":8,"nodeType":"165","endLine":91,"endColumn":28,"suggestions":"171"},{"ruleId":"163","severity":1,"message":"172","line":71,"column":8,"nodeType":"165","endLine":71,"endColumn":18,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"@typescript-eslint/no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar",["174"],["175"],["174"],["175"],"'resetAllFields' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'admissionComments', 'admited', 'assitedToObservation', 'down', 'downComments', 'downDate', 'interviewDate', 'observationDay', 'observationDayComments', 'preselected', 'preselectedComments', 'props.candidateId', and 'trainer'. Either include them or remove the dependency array.","ArrayExpression",["176"],"'setShowDailyInteview' is assigned a value but never used.","'setShowPendingForCall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isLoggedIn' and 'renderContentForUserType'. Either include them or remove the dependency array.",["177"],["178"],"React Hook useEffect has a missing dependency: 'userTypesFields'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"180","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [admissionComments, admited, assitedToObservation, down, downComments, downDate, interviewDate, observationDay, observationDayComments, preselected, preselectedComments, processInformation, props.candidateId, trainer]",{"range":"187","text":"188"},"Update the dependencies array to be: [userType, showConfiguration, showUsers, showCandidates, isLoggedIn, renderContentForUserType]",{"range":"189","text":"190"},{"range":"191","text":"188"},"Update the dependencies array to be: [userTypesFields, usertype]",{"range":"192","text":"193"},[4348,4368],"[admissionComments, admited, assitedToObservation, down, downComments, downDate, interviewDate, observationDay, observationDayComments, preselected, preselectedComments, processInformation, props.candidateId, trainer]",[1826,1882],"[userType, showConfiguration, showUsers, showCandidates, isLoggedIn, renderContentForUserType]",[4580,4600],[2166,2176],"[userTypesFields, usertype]"]