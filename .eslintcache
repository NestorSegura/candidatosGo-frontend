[{"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/index.tsx":"1","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/reportWebVitals.ts":"2","/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/auth.service.ts":"3","/Users/nestorsegura/dev/gogogo-sync/frontend/src/index.tsx":"4","/Users/nestorsegura/dev/gogogo-sync/frontend/src/reportWebVitals.ts":"5","/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/CandidatePage.tsx":"6","/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/Dashboard.tsx":"7","/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/ConfigurationPage.tsx":"8","/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/Usuarios.tsx":"9","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Login.tsx":"10","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/MainNav.tsx":"11","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/auth/AuthContext.tsx":"12","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/auth.service.ts":"13","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidatosSearchForm.tsx":"14","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateFile.tsx":"15","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateList.tsx":"16","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/CreateUsersForm.tsx":"17","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/pagewrapper/PageWrapper.tsx":"18","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/fetch.ts":"19","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/candidates.service.ts":"20","/Users/nestorsegura/dev/gogogo-sync/frontend/src/utils/comparisonMethods.ts":"21","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateEditForm.tsx":"22","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/processinformation/ProcessInformationCreateEditForm.tsx":"23","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/sidenav/SideNav.tsx":"24","/Users/nestorsegura/dev/gogogo-sync/frontend/src/utils/checkMethods.ts":"25","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/processInformation.service.ts":"26","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateListRow.tsx":"27","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/office.service.ts":"28","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateOfficeDetails.tsx":"29","/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/CandidatesToCall.tsx":"30","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/modifyUsers.tsx":"31","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/UserRow.tsx":"32","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/user.service.ts":"33","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/ModifyUsers.tsx":"34","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/UsersTable.tsx":"35","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/modals/Alert.tsx":"36","/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/Diary.tsx":"37","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryIntreviews.tsx":"38","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryObservations.tsx":"39","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryCandidateRow.tsx":"40","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryCandidatesTable.tsx":"41"},{"size":1417,"mtime":1611442781849,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":1610811910024,"results":"44","hashOfConfig":"43"},{"size":2025,"mtime":1612104761596,"results":"45","hashOfConfig":"43"},{"size":1668,"mtime":1614801552210,"results":"46","hashOfConfig":"47"},{"size":425,"mtime":1610811910024,"results":"48","hashOfConfig":"47"},{"size":329,"mtime":1611442601111,"results":"49","hashOfConfig":"47"},{"size":773,"mtime":1614377214250,"results":"50","hashOfConfig":"47"},{"size":274,"mtime":1611442601092,"results":"51","hashOfConfig":"47"},{"size":2146,"mtime":1615322546030,"results":"52","hashOfConfig":"47"},{"size":2820,"mtime":1615326993698,"results":"53","hashOfConfig":"47"},{"size":2232,"mtime":1615327401794,"results":"54","hashOfConfig":"47"},{"size":3991,"mtime":1615327504265,"results":"55","hashOfConfig":"47"},{"size":2172,"mtime":1614439315620,"results":"56","hashOfConfig":"47"},{"size":8212,"mtime":1615325044803,"results":"57","hashOfConfig":"47"},{"size":4532,"mtime":1614546518079,"results":"58","hashOfConfig":"47"},{"size":1698,"mtime":1615323993600,"results":"59","hashOfConfig":"47"},{"size":8469,"mtime":1615325066865,"results":"60","hashOfConfig":"47"},{"size":512,"mtime":1614801529401,"results":"61","hashOfConfig":"47"},{"size":2143,"mtime":1614560297158,"results":"62","hashOfConfig":"47"},{"size":1940,"mtime":1614798188554,"results":"63","hashOfConfig":"47"},{"size":760,"mtime":1611443494449,"results":"64","hashOfConfig":"47"},{"size":4424,"mtime":1611443368296,"results":"65","hashOfConfig":"47"},{"size":17307,"mtime":1614620271258,"results":"66","hashOfConfig":"47"},{"size":4490,"mtime":1614623122536,"results":"67","hashOfConfig":"47"},{"size":168,"mtime":1611425547652,"results":"68","hashOfConfig":"47"},{"size":1040,"mtime":1613683150374,"results":"69","hashOfConfig":"47"},{"size":1585,"mtime":1615323778870,"results":"70","hashOfConfig":"47"},{"size":566,"mtime":1614546471191,"results":"71","hashOfConfig":"47"},{"size":978,"mtime":1614376820148,"results":"72","hashOfConfig":"47"},{"size":1739,"mtime":1615325095598,"results":"73","hashOfConfig":"47"},{"size":2093,"mtime":1614549993808,"results":"74","hashOfConfig":"47"},{"size":2373,"mtime":1614599600143,"results":"75","hashOfConfig":"47"},{"size":823,"mtime":1614560297170,"results":"76","hashOfConfig":"47"},{"size":1701,"mtime":1614600205370,"results":"77","hashOfConfig":"47"},{"size":2100,"mtime":1614801801098,"results":"78","hashOfConfig":"47"},{"size":1393,"mtime":1615322419845,"results":"79","hashOfConfig":"47"},{"size":1392,"mtime":1614616327593,"results":"80","hashOfConfig":"47"},{"size":2878,"mtime":1614798188568,"results":"81","hashOfConfig":"47"},{"size":2882,"mtime":1614798339181,"results":"82","hashOfConfig":"47"},{"size":1426,"mtime":1615323097536,"results":"83","hashOfConfig":"47"},{"size":1036,"mtime":1615324050918,"results":"84","hashOfConfig":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d2u1iy",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"zigbde",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/index.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/reportWebVitals.ts",[],["176","177"],"/Users/nestorsegura/dev/gogogo-sync/app/frontend/src/services/auth.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/index.tsx",[],["178","179"],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/reportWebVitals.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/CandidatePage.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/Dashboard.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/ConfigurationPage.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/Usuarios.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Login.tsx",["180"],"import * as React from 'react';\nimport {useContext, useState} from 'react';\nimport AuthService, {ErrorMessageResponse, LoginResponse} from \"../services/auth.service\";\nimport {AuthContext, LocalStorageProps} from \"./auth/AuthContext\";\nimport {Redirect, useHistory} from 'react-router-dom';\n\nconst Login: React.FC = () => {\n    const [username, setUsername] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const {login} = useContext(AuthContext);\n\n    const handleLogin = async () => {\n        AuthService.login(username, password)\n            .then(async (response) => {\n                if (response.success) {\n                    response = response as LoginResponse;\n                    const localstorage: LocalStorageProps = {\n                        token: response.token,\n                        expiresIn: response.expires,\n                        userType: response.user.user_type,\n                        office_id: response.user.office_id\n                    }\n                    await login(localstorage, () => {\n                        setError('');\n                        return <Redirect to=\"/\" />\n                    });\n                } else {\n                    response = response as ErrorMessageResponse\n                    setError(response.msg)\n                }\n            })\n            .catch(error => {\n                console.error(error);\n                setError(`TECHNICAL ERROR ${error}`);\n            });\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row justify-content-center align-items-center\">\n                <form className=\"col-10 col-sm-4\">\n                    <h1>Entrar al sistema</h1>\n                    <div className=\"mb-3\">\n                        <input className=\"form-control\" placeholder=\"nombre de usuario\" value={username}\n                               onChange={(e) => setUsername(e.target.value)}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <input type=\"password\" className=\"form-control\" placeholder=\"contraseña\" value={password}\n                               onChange={(e) => setPassword(e.target.value)}/>\n                    </div>\n                    <div className=\"mb-3\">\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={handleLogin}>entrar</button>\n                    </div>\n                    {\n                        !!error ? (\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {error}\n                            </div>\n                        ) : null\n                    }\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/MainNav.tsx",["181"],"import * as React from \"react\";\nimport {useContext, useEffect} from \"react\";\nimport {AuthContext} from \"./auth/AuthContext\";\nimport {Redirect, useHistory} from \"react-router-dom\";\n\nconst MainNav: React.FC = () => {\n    const {isLoggedIn, logout, usertype, officeId, office_name} = useContext(AuthContext);\n    const history = useHistory();\n\n    const logOutHandler = () => {\n        logout();\n        return <Redirect to='/'/>;\n    }\n\n\n    let userRootRights = new Map<string, string[]>();\n    userRootRights.set('SYS_ADMIN', ['usuarios']);\n    userRootRights.set('OFFICE', ['candidatos', 'usuarios', 'configuracion']);\n    userRootRights.set('ASISTENCE', ['candidatos']);\n\n    const redirectHandler = () => {\n        if (isLoggedIn) {\n\n            const {pathname} = history.location;\n            if (usertype) {\n                let alloedPaths = userRootRights.get(usertype);\n                const match = alloedPaths?.find(path => pathname.includes(path));\n                if (!match) {\n                    const redirectPath = alloedPaths ? alloedPaths[0] : '/';\n                    history.push(redirectPath);\n                }\n\n                if (history.location.pathname === '/') {\n                    if (usertype === 'SYS_ADMIN') {\n                        history.push('/usuarios')\n                    } else {\n                        history.push('/candidatos')\n                    }\n                }\n            }\n\n\n        } else {\n            history.push('/')\n        }\n    }\n\n    useEffect(() => {\n        redirectHandler();\n    }, [isLoggedIn, logout, usertype, officeId, office_name])\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <h3>CANDIDATOSGO {office_name ? <small> ( {office_name} )</small> : null}</h3>\n                {\n                    isLoggedIn ? (\n                        <div className=\"d-flex\">\n                            <button className=\"btn btn-outline-danger\" type=\"button\" onClick={logOutHandler}>logout\n                            </button>\n                        </div>\n                    ) : null\n                }\n            </div>\n        </nav>\n    )\n}\n\nexport default MainNav;","/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/auth/AuthContext.tsx",["182"],"import * as React from \"react\";\nimport {PropsWithChildren, ReactNode, useEffect, useState} from \"react\";\nimport moment from 'moment';\nimport AuthService from \"../../services/auth.service\";\nimport OfficeService from \"../../services/office.service\";\n\ninterface AuthContextProps {\n    isLoggedIn: boolean;\n    usertype?: string;\n    logout: () => void;\n    login: (localstorage: LocalStorageProps, callback: Function) => void;\n    officeId: string;\n    office_name?: string;\n}\n\nexport interface LocalStorageProps {\n    expiresIn: string;\n    token: string;\n    userType: string;\n    office_id: string;\n}\n\n\nexport const AuthContext = React.createContext<AuthContextProps>({\n    isLoggedIn: false,\n    usertype: '',\n    officeId: '',\n    logout: () => {\n    },\n    login: () => {\n    },\n});\n\nconst AutProvicer: React.FC = ({children}: PropsWithChildren<ReactNode>) => {\n\n    const getExpiration = (expires: (string)): (moment.Moment) => {\n        return moment(JSON.parse(expires));\n    }\n\n    const isLoggedInCheck = (expires: moment.Moment): boolean => moment().isBefore(expires);\n\n    const expiresString = localStorage.getItem('expires') ?? null;\n    const expires: (moment.Moment | null) = expiresString ? getExpiration(expiresString) : null;\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>((!!expires && isLoggedInCheck(expires)));\n    const [token, setToken] = useState<string | null>(null);\n    const [userType, setUserType] = useState<string>(localStorage.getItem('usertype') ?? '');\n    const [officeId, setOfficeId] = useState<string>(localStorage.getItem('office_id') ?? '');\n    const [officeName, setOfficeName] = useState<string>();\n\n    const logout = async (): Promise<boolean> => {\n        const res = await AuthService.logout();\n        setIsLoggedIn(false);\n        setOfficeName(undefined);\n        setOfficeId('');\n        setToken(null);\n        return res.success\n    }\n\n    const setLoginHandler = async (localstorage: LocalStorageProps, callback: Function) => {\n        const expiresArray = Array.from(localstorage.expiresIn);\n        const expires = moment().add(JSON.parse(expiresArray[0]), expiresArray[1]);\n\n        localStorage.setItem('token', localstorage.token);\n        localStorage.setItem('expires', JSON.stringify(expires.valueOf()));\n        localStorage.setItem('usertype', localstorage.userType);\n        localStorage.setItem('office_id', localstorage.office_id);\n\n        if (expires) {\n            setIsLoggedIn(isLoggedInCheck(expires))\n            setUserType(userType)\n            setOfficeId(localstorage.office_id);\n        }\n\n        OfficeService.getOfficeByUuid(officeId)\n            .then((res) => {\n                setOfficeName(res.parsedBody?.data.name);\n                callback();\n            }).catch(error => {\n            console.error(error);\n            callback();\n        });\n\n    }\n\n    useEffect(() => {\n        const expiresString = localStorage.getItem('expires') ?? null;\n        const expires: (moment.Moment | null) = expiresString ? getExpiration(expiresString) : null;\n\n        let shouldUpdate = expires && isLoggedInCheck(expires) && !isLoggedIn;\n        if (shouldUpdate) {\n            setIsLoggedIn(true);\n            setToken(token);\n            setOfficeId(localStorage.getItem('office_id') ?? '')\n        }\n    }, [token, isLoggedIn])\n\n    useEffect(() => {\n        if (officeId) {\n            OfficeService.getOfficeByUuid(officeId)\n                .then(res => {\n                    if (officeName !== res.parsedBody?.data.name) {\n                        setOfficeName(res.parsedBody?.data.name)\n                    }\n                })\n        }\n    }, [officeId, isLoggedIn])\n\n    return (\n        <AuthContext.Provider value={{\n            isLoggedIn,\n            logout,\n            usertype: userType,\n            officeId,\n            login: setLoginHandler,\n            office_name: officeName\n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AutProvicer;","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/auth.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidatosSearchForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateFile.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateList.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/CreateUsersForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/pagewrapper/PageWrapper.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/fetch.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/candidates.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/utils/comparisonMethods.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateEditForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/processinformation/ProcessInformationCreateEditForm.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/sidenav/SideNav.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/utils/checkMethods.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/processInformation.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateListRow.tsx",["183"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport {UICandidate} from \"../../services/models/UICandidate\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport OfficeService from \"../../services/office.service\";\nimport {UIOffice} from \"../../services/models/UIOffice\";\nimport {deepEqual} from \"../../utils/comparisonMethods\";\n\ninterface CandidateRowI {\n    candidate: UICandidate;\n}\n\nconst CandidateRow: React.FC<CandidateRowI> = (props: CandidateRowI) => {\n\n    const [office, setOffice] = useState<UIOffice>();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response = await OfficeService.getOfficeByUuid(props.candidate.office_id)\n            if (response.parsedBody) {\n                const data = response.parsedBody?.data;\n                const uuid = data ? data.uuid : '';\n                const name = data ? data.name : '';\n\n                if (!deepEqual(office, {uuid, name})) {\n                    setOffice({uuid: uuid, name})\n                }\n            }\n        }\n        fetchData();\n    })\n\n    return <tr key={props.candidate.id}>\n        <td>{props.candidate.surename}</td>\n        <td>{props.candidate.lastname}</td>\n        <td>{props.candidate.dni}</td>\n        <td>{props.candidate.email}</td>\n        <td>{props.candidate.phone1}</td>\n        <td>{props.candidate.phone2}</td>\n        <td>{office?.name}</td>\n        <td>\n            <Link className=\"btn btn-outline-primary\" to={`/candidatos/${props.candidate.id}`}>Detalles</Link>\n        </td>\n    </tr>\n}\n\nexport default CandidateRow;","/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/office.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/candidatos/CandidateOfficeDetails.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/CandidatesToCall.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/modifyUsers.tsx",["184"],"import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport {UIUser} from \"../../services/models/UIUser\";\nimport UserRow from \"./UserRow\";\nimport {deepEqual} from \"../../utils/comparisonMethods\";\nimport UserService from \"../../services/user.service\";\n\nconst ModifyUsers: React.FC = () => {\n\n    const [users, setUsers] = useState<UIUser[]>();\n    const [editUser, setEditUser] = useState<UIUser>();\n\n    useEffect(() => {\n        UserService.getAllUsers()\n            .then((response) => {\n                if (!deepEqual(users, response.parsedBody?.data)) {\n                    setUsers(response.parsedBody?.data)\n                }\n            })\n            .catch((error) => console.error(error))\n    }, [users])\n\n    const onEditUserHandler = (id: number) => {\n        if (users) {\n            setEditUser(users.find(user => user.id === id))\n        }\n    }\n\n    return (\n        <div>\n            <h1 className=\"mb-4\">Modificar Usuarios</h1>\n            <div className=\"table-responsive\">\n                <table className=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <td>Nombre de usuario</td>\n                        <td>Patrocinador</td>\n                        <td>Tipo de usuario</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        users && users.map(user => <UserRow key={user.id}\n                                                            onUserSelectHandler={onEditUserHandler}\n                                                            userName={user.name}\n                                                            userType={user.user_type}\n                                                            userId={user.id as number}\n                                                            userSponsor={user.sponsor_uuid}/>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default ModifyUsers;",["185","186"],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/UserRow.tsx",[],["187","188"],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/services/user.service.ts",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/ModifyUsers.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/users/UsersTable.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/modals/Alert.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/pages/Diary.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryIntreviews.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryObservations.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryCandidateRow.tsx",[],"/Users/nestorsegura/dev/gogogo-sync/frontend/src/components/Diary/DiaryCandidatesTable.tsx",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":5,"column":19,"nodeType":"197","messageId":"198","endLine":5,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":50,"column":8,"nodeType":"201","endLine":50,"endColumn":61,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"203","line":106,"column":8,"nodeType":"201","endLine":106,"endColumn":30,"suggestions":"204"},{"ruleId":"195","severity":1,"message":"196","line":4,"column":15,"nodeType":"197","messageId":"198","endLine":4,"endColumn":25},{"ruleId":"195","severity":1,"message":"205","line":11,"column":12,"nodeType":"197","messageId":"198","endLine":11,"endColumn":20},{"ruleId":"189","replacedBy":"206"},{"ruleId":"191","replacedBy":"207"},{"ruleId":"189","replacedBy":"208"},{"ruleId":"191","replacedBy":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],["210"],["211"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirectHandler'. Either include it or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has a missing dependency: 'officeName'. Either include it or remove the dependency array.",["213"],"'editUser' is assigned a value but never used.",["210"],["211"],["210"],["211"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [isLoggedIn, logout, usertype, officeId, office_name, redirectHandler]",{"range":"218","text":"219"},"Update the dependencies array to be: [officeId, isLoggedIn, officeName]",{"range":"220","text":"221"},[1550,1603],"[isLoggedIn, logout, usertype, officeId, office_name, redirectHandler]",[3641,3663],"[officeId, isLoggedIn, officeName]"]